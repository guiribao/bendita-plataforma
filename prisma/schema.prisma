// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Usuario {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  senha         String   @db.VarChar(100)
  papel         Papel    @default(ASSOCIADO)
  criado_em     DateTime @default(now()) @db.Timestamptz()
  atualizado_em DateTime @updatedAt @db.Timestamptz()
  perfil        Perfil?
}

model Usuario_Esqueci_Senha {
  id            Int      @id @default(autoincrement())
  usuarioId     Int
  token         String   @unique @default(uuid())
  ativo         Boolean  @default(true)
  valido_ate    DateTime @default(now()) @db.Timestamptz()
  criado_em     DateTime @default(now()) @db.Timestamptz()
  atualizado_em DateTime @updatedAt @db.Timestamptz()
}

model Perfil {
  id                   String   @id @default(uuid())
  // INFORMAÇÕES BASICAS
  nome_completo        String
  apelido              String?
  data_nascimento      DateTime @db.Date
  sexo                 String?
  cpf                  String?
  rg                   String?
  nacionalidade        String?
  estado_civil         String?
  cep                  String?
  endereco_rua         String?
  endereco_numero      String?
  endereco_complemento String?
  endereco_bairro      String?
  endereco_cidade      String?
  endereco_estado      String?
  telefone             String?
  redes_instagram      String?
  redes_linkedin       String?
  usuario       Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId     Int          @unique
  criado_em     DateTime     @default(now()) @db.Timestamptz()
  atualizado_em DateTime     @updatedAt @db.Timestamptz()
  Associacao    Associado?   @relation("PerfilDoAssociado")
  Documentos    Documentos[]
  Dependentes   Associado[]  @relation("PerfilDoResponsavel")
}

model Associado {
  id                                        String           @id @default(uuid())
  // SAÚDE
  saude_quadro_geral                        String?
  saude_uso_medicacao                       Boolean          @default(false)
  saude_uso_medicacao_nome                  String?
  saude_uso_terapeutico_canabis             Boolean          @default(false)
  saude_uso_terapeutico_canabis_experiencia String?
  saude_medico_prescritor                   Boolean          @default(false)
  saude_medico_prescritor_nome              String?
  saude_medico_prescritor_crm               String?
  tipo_associado                            TipoAssociado    @default(APOIADOR)
  perfil                                    Perfil           @relation(name: "PerfilDoAssociado", fields: [perfilId], references: [id])
  perfilId                                  String           @unique
  responsavel                               Perfil?          @relation(name: "PerfilDoResponsavel", fields: [responsavelId], references: [id])
  responsavelId                             String?
  status                                    AssociacaoStatus @default(AGUARDANDO_CADASTRO)
  indicado_por                              String?          @db.VarChar(64)
  de_acordo_termo_associativo               Boolean?
  de_acordo_termo_associativo_em            DateTime?        @db.Timestamptz()

  criado_em     DateTime @default(now()) @db.Timestamptz()
  atualizado_em DateTime @updatedAt @db.Timestamptz()

  Documentos Documentos[]

  @@index([responsavelId])
}

model Documentos {
  id           String        @id @default(uuid())
  tipo         TipoDocumento @default(NAO_IDENTIFICADO)
  nome_arquivo String
  associado    Associado     @relation(fields: [associadoId], references: [id])
  associadoId  String
  criado_por   Perfil?       @relation(fields: [criadoPorId], references: [id])
  criadoPorId  String?
  criado_em    DateTime      @default(now()) @db.Timestamptz()

  @@index([associadoId])
  @@index([criadoPorId])
}

model Logger {
  id        Int        @id @default(autoincrement())
  tipo_log  TipoLogger
  log       Json?
  criado_em DateTime   @default(now()) @db.Timestamptz()
}

enum Papel {
  ADMIN
  ASSOCIADO
  ASSOCIADO_DEPENDENTE
  SECRETARIA
  SAUDE
}

enum TipoDocumento {
  NAO_IDENTIFICADO
  IDENTIFICACAO
  IDENTIFICACAO_RESPONSAVEL
  COMPROVANTE_RESIDENCIA
  RECEITA_MEDICA
  AUTORIZACAO_ANVISA
}

enum TipoAssociado {
  APOIADOR
  MEDICINAL
}

enum AssociacaoStatus {
  AGUARDANDO_CADASTRO
  AGUARDANDO_PAGAMENTO
  AGUARDANDO_ASSINATURA
  EM_ANALISE
  ASSOCIADO
}

enum TipoLogger {
  EMAIL
}
